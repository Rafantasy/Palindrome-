#include<iostream>
#include<string>
#include<string.h>
#include<stdio.h>
using namespace std;

string  findLongestPalindrome(char *str)
{
	int len = strlen(str);
	int maxLength = 1;
	int start = 0;         //每个单个字符也可以当成回文子串
	int c[len][len];
	memset(c, 0, len*len);
	//初始化状态矩阵(判断连续的两个字符是否相等)
	for(int i = 0; i < len; ++i){
		c[i][i] = 1;
		if(i<len-1 && str[i] == str[i+1]){
			c[i][i+1] = 1;
			start = i;
			maxLength = 2;
		}
	}
	//找回文串长度大于2的情况
	for(int temp_len = 3; temp_len <= len; ++temp_len){
		for(int j = 0; j <= len-temp_len; ++j){
			int k = j + temp_len - 1;               //子串结束地址
			if(c[j+1][k-1] && str[j] == str[k]){
				c[j][k] = 1;
				maxLength = temp_len;
				start = j;
			}
		}
	}
	if(maxLength >= 2){
		string s;
		for(int i = maxLength; i > 0; --i)
			s += str[start++];
		return s;
	}
	else
		return "";
}

int main()
{
	char str[] = "abbacddeddc";
	string result = findLongestPalindrome(str);
	cout<<result<<endl;

	return 0;
}
